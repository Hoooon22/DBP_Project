/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2020-12-10 01:30:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.regex.*;

public final class update_005fclass_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/top.jsp", Long.valueOf(1607427207702L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util.regex");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>과목정보수정</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');

	String session_id = (String)session.getAttribute("user");
	String log;

	if (session_id==null) {
		log="<a href=login.jsp>로그인</a>";
	} else {
		log="<a href=logout.jsp>로그아웃</a>";
		Pattern p = Pattern.compile("[A-Z].*");
		Matcher m = p.matcher(session_id);
	}

      out.write("\r\n");
      out.write("<table width=\"75%\" align=\"center\" bgcolor=\"#FFFF99\" border>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td align=\"center\"><b>");
      out.print(log);
      out.write("</b></td>\t\r\n");
      out.write("\t\t<td align=\"center\"><b><a href=\"update_professor.jsp\">교수정보변경</b></td>    \r\n");
      out.write("\t\t<td align=\"center\"><b><a href=\"insert_teach.jsp\">강좌개설신청</b></td>\r\n");
      out.write("\t\t<td align=\"center\"><b><a href=\"update_teach.jsp\">수강정원변경</b></td>\r\n");
      out.write("\t\t<td align=\"center\"><b><a href=\"grade.jsp\">성적등록</b></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write('\r');
      out.write('\n');
      out.write('	');

		if (session_id==null) response.sendRedirect("login.jsp");
	
		Connection conn = null;     
		Statement stmt = null;	
		ResultSet myResultSet = null; 
	   	CallableStatement cstmt1 = null;
		CallableStatement cstmt2 = null;
	   	int nYear = 0;
		int nSemester = 0;
		String mySQL = "";
	
		String dburl = "jdbc:oracle:thin:@210.94.199.20:1521:DBLAB";
		String user = "FE2018112028";	// 본인 아이디(ex.FE0000000000)
		String passwd = "FE2018112028";	// 본인 패스워드(ex.FE0000000000)
		String dbdriver = "oracle.jdbc.driver.OracleDriver";    
	   
		String cid = request.getParameter("c_id");                                                             
		String cidno = request.getParameter("c_id_no");    
	
		try {
			//【3-①】
			Class.forName(dbdriver);
			conn = DriverManager.getConnection(dburl, user, passwd);
			stmt = conn.createStatement();

			String sql = null;
			sql = "{? = call DATE2ENROLLYEAR(SYSDATE)}";
			cstmt1 = conn.prepareCall(sql);
			cstmt1.registerOutParameter(1,java.sql.Types.INTEGER);
			cstmt1.execute();
			nYear= cstmt1.getInt(1);
			sql = "{? = call DATE2ENROLLSEMESTER(SYSDATE)}";
			cstmt2 = conn.prepareCall(sql);
			cstmt2.registerOutParameter(1,java.sql.Types.INTEGER);
			cstmt2.execute();
			nSemester= cstmt2.getInt(1);

			mySQL = "select course.c_name as cname, teach.t_where as twhere, teach.t_time as ctime, professor.p_name as pname from course,teach, professor where course.c_id = teach.c_id and teach.p_id = '" + session_id + "' and teach.t_year = '" + nYear + "' and teach.t_semester = '" + nSemester + "'";
			myResultSet = stmt.executeQuery(mySQL);
			
		} catch(SQLException ex) {
			System.err.println("SQLException: " + ex.getMessage());
		}                                                      
	  
		if (myResultSet.next()) {
			String c_name = myResultSet.getString("cname");
			String c_twhere = myResultSet.getString("twhere");
			String c_time = myResultSet.getString("ctime");
			String p_name = myResultSet.getString("pname");
	
      out.write("\r\n");
      out.write("\t\t<form name=\"update_class\" method=\"post\" action=\"update_class_verify.jsp\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"p_id\" size=\"30\" value=\"");
      out.print( session_id );
      out.write("\">\r\n");
      out.write("\t\t\t<table width=\"75%\" align=\"center\" border>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>과목명</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( c_name );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>분반</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( cidno );
      out.write("<input type=\"hidden\" name=\"c_id_no\" value=\"");
      out.print(cidno);
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t \t<th>교수명</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( p_name );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t    \t<th>강의실</th>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<select name=\"t_where\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"\"></option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"인-201\">인-201</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"인-202\">인-202</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"인-309\">인-309</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"인-310\">인-310</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"숭-201\">숭-201</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"숭-202\">숭-202</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"숭-301\">숭-301</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"숭-417\">숭-417</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>      \r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>시간</th>\r\n");
      out.write("\t\t\t\t");
 if (c_time == null) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"t_time\" size=\"5\"  value=\"\"></td>\r\n");
      out.write("\t\t\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"t_time\" size=\"5\"  value=\"");
      out.print( c_time );
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</tr>      \r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"c_id\" value=\"");
      out.print(cid);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"수정\">\r\n");
      out.write("\t\t\t\t\t</td> \r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tdocument.update_class.t_where.value = \"");
      out.print(c_twhere);
      out.write("\";\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t");

		}	
		cstmt1.close();  
		cstmt2.close();  
		stmt.close();  
		conn.close();
	
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
