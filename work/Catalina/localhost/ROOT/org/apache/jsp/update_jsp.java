/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2020-12-07 03:46:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/top.jsp", Long.valueOf(1606705866522L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head><title>수강신청 사용자 정보 수정</title></head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head><title>Insert title here</title></head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
 
		String session_id = (String)session.getAttribute("user");
		String session_name = (String)session.getAttribute("name");
		String log;
  	
		if(session_id==null){
			log="<a href=login.jsp>로그인</a>";
		} else {
			log="<a href=logout.jsp>로그아웃</a>";
		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table width=\"75%\" align=\"center\" bgcolor=\"#FFFF99\" border>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align=\"center\"><b>");
      out.print(log);
      out.write("</b></td>\r\n");
      out.write("\t\t\t<td align=\"center\"><b><a href=\"update.jsp\">사용자 정보 수정</b></td>\r\n");
      out.write("\t\t\t<td align=\"center\"><b><a href=\"insert.jsp\">수강신청 입력</b></td>\r\n");
      out.write("\t\t\t<td align=\"center\"><b><a href=\"delete.jsp\">수강신청 삭제</b></td>\r\n");
      out.write("\t\t\t<td align=\"center\"><b><a href=\"select.jsp\">수강신청 조회</b></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      Update.Update member = null;
      member = (Update.Update) _jspx_page_context.getAttribute("member", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (member == null){
        member = new Update.Update();
        _jspx_page_context.setAttribute("member", member, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

	if (session_id==null) response.sendRedirect("login.jsp");

	Connection myConn = null;     
	Statement stmt = null;	
	ResultSet myResultSet = null; 
	String mySQL = "";

	String dburl  = "jdbc:oracle:thin:@210.94.199.20:1521:dblab";
	String user="ST2018112028"; // 본인 아이디(ex.ST0000000000)
	String passwd="ST2018112028"; // 본인 패스워드(ex.ST0000000000)
	String dbdriver = "oracle.jdbc.driver.OracleDriver";    

	try {
  	    Class.forName(dbdriver);
	    myConn =  DriverManager.getConnection (dburl, user, passwd);
	    stmt = myConn.createStatement();	
    } catch(SQLException ex) {
	    System.err.println("SQLException: " + ex.getMessage());
	}
    mySQL = "select s_name, s_addr, s_pwd, s_college, s_major from student where s_id='" + session_id + "'" ;
	myResultSet = stmt.executeQuery(mySQL);
	if (myResultSet.next()) {
		member.setName(myResultSet.getString("s_name"));
		member.setAddr(myResultSet.getString("s_addr"));
		member.setPwd(myResultSet.getString("s_pwd"));	
		member.setCollege(myResultSet.getString("s_college"));
		member.setMajor(myResultSet.getString("s_major"));		

      out.write("\r\n");
      out.write("\r\n");
      out.write("<form method=\"post\" action=\"update_verify.jsp\">\r\n");
      out.write("  <input type=\"hidden\" name=\"s_id\" size=\"30\" value=\"");
      out.print( session_id );
      out.write("\">\r\n");
      out.write("  <table width=\"75%\" align=\"center\" border>\r\n");
      out.write("     <tr><th>이름</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"s_name\" size=\"50\" value=\"");
      out.print( member.getName() );
      out.write("\"> </td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr><th>주소</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"s_addr\" size=\"50\" value=\"");
      out.print( member.getAddr() );
      out.write("\"> </td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr><th>패스워드</th>\r\n");
      out.write("         <td><input type=\"password\" name=\"s_pwd\" size=\"20\"  value=\"");
      out.print( member.getPwd() );
      out.write("\"></td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr><th>학부</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"s_college\" size=\"50\" value=\"");
      out.print( member.getCollege() );
      out.write("\"> </td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr><th>전공</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"s_major\" size=\"50\" value=\"");
      out.print( member.getMajor() );
      out.write("\"> </td>\r\n");
      out.write("     </tr>\r\n");
      out.write("\t\t\t   \r\n");

	}	
	stmt.close();  
	myConn.close();

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t<input type=\"submit\" value=\"수정\">\r\n");
      out.write("\t</td> \r\n");
      out.write("</tr>\r\n");
      out.write("</table></form></body></html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
